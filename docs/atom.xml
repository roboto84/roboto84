<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>roboto84 - Full-Stack Developer</title>
	<subtitle>Software Worth Debugging</subtitle>
	
	<link href="/atom.xml" rel="self"/>
	<link href=""/>
	<updated>2022-11-17T22:15:48Z</updated>
	<id>https://roboto84.dev</id>
	<author>
		<name>roboto84</name>
		<email>none</email>
	</author>
	
	<entry>
		<title>Geometrize Your Images</title>
		<link href="/posts/Geometrize_Your_Images/"/>
		<updated>2022-11-16T00:00:00Z</updated>
		<id>/posts/Geometrize_Your_Images/</id>
		<content type="html">&lt;h3 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;Introduction &lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a data conscious Web Developer, I avoid images in my applications when I can.  If I do use
them, I try to use them with impact while handling them carefully in data storage and through
the wire.  Why so careful?  Images are big and don&#39;t scale as well as text data.  Try managing
and storing 10,000 words, that&#39;s pretty easy... then consider trying to manage and storing
10,000 images.  I bet managing the images scenario will make you sweat a bit more üòÖ.  We
should think twice about how we use such an important form of storytelling on the web to get
our message across quickly and with deep impact.  There are multiple options to load and
present images on the web; from different image formats, image compression, lazy loading,
above the fold only strategies, etc.  One of my favorite options is leveraging vector based
images.  Specifically leveraging vector images based on the geometrization of my raster images
due to their file size, packaging options, and cyber-punkish art form (vibes üòè).&lt;/p&gt;
&lt;h3 id=&quot;vector-images&quot; tabindex=&quot;-1&quot;&gt;Vector Images &lt;a class=&quot;header-anchor&quot; href=&quot;#vector-images&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vector images are great.  They can be fairly small in storage size, and infinitely re-sizable.  In a
basic explanation, &lt;strong&gt;vector&lt;/strong&gt; images represent data about the image as formulas that describe
how the image should be drawn using &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_(mathematics_and_physics)&quot;&gt;vectors&lt;/a&gt;.  How do you draw an
image with only vectors?  You can think of a vector as a line with a certain length for our
purposes here.  These lines are used to create geometric shapes that are usually filled in
with colors.  These shapes (they could be hundreds or thousands of them) make up the image we
want the file to portray.  High fidelity images on the web are usually not in vector formats
(&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types&quot;&gt;jpg, gif, webp, avif, png&lt;/a&gt;)
due to how much information some images need to convey (more on that later).  These high fidelity
images are stored as what is known as &lt;strong&gt;raster&lt;/strong&gt; formats. &lt;a href=&quot;https://en.wikipedia.org/wiki/Raster_graphics&quot;&gt;Raster&lt;/a&gt; formats represent data about the image not
as vector formulas, but as a 2D grid of pixels.  Here is a comparison of the format described above:&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;img loading=&quot;lazy&quot; width=&quot;600&quot; height=&quot;295&quot; class=&quot;meme img_shadow&quot; title=&quot;My Bots are Hacking Your SSH Server&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/vector-vs-raster.webp&quot; alt=&quot;My Bots are Hacking Your SSH Server&quot; data-align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Fonts are a great example of vector vs raster formats.  Raster formats don&#39;t resize very well due to
their image data being heavily based on pixel definition data.  Imagine what a nightmare it would
be to resize fonts if they were stored in raster formats?  I would make the text illegible at some point.&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;img loading=&quot;lazy&quot; width=&quot;600&quot; height=&quot;295&quot; class=&quot;meme img_shadow&quot; title=&quot;My Bots are Hacking Your SSH Server&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/font-raster-vs-vector.webp&quot; alt=&quot;My Bots are Hacking Your SSH Server&quot; data-align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Clearly the vector format is ideal for some use cases, but that isn&#39;t the case for all images.  Take
for example a high fidelity image of Copenhagen&#39;s Nyhavn Canal.&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;img loading=&quot;lazy&quot; width=&quot;600&quot; height=&quot;295&quot; class=&quot;meme img_shadow&quot; title=&quot;My Bots are Hacking Your SSH Server&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/nyhavn.webp&quot; alt=&quot;My Bots are Hacking Your SSH Server&quot; data-align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;This image has &lt;strong&gt;a lot&lt;/strong&gt; of information.  At some point, if an image has too many details, describing
it in terms of vectors becomes impractical as you would need to define vector shapes that contain less
and less pixels when compared to its raster format equivalent.  That is something worth considering
when comparing both formats.  Vector formats are more efficient for images in which the average vector
shape definition can define the placement of multiple pixels of a raster format equivalent as long as
the average vector shape definition takes less space than the pixel definition data.  Phew üòÆ‚Äçüí®, that
was a mouth full, but it gets to an important point moving forward.&lt;/p&gt;
&lt;h3 id=&quot;geometrized-images&quot; tabindex=&quot;-1&quot;&gt;Geometrized Images &lt;a class=&quot;header-anchor&quot; href=&quot;#geometrized-images&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now that we understand how images are stored in vector and raster formats, let&#39;s talk about geometrizing
raster images to get vector approximates.  In order to produce these vector images, we can use some
great tools that have already been created by talented developers for this very purpose.  These tools
will transform our raster format images into SVG vector format images.  Specifically you can choose to
use one of the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.geometrize.co.uk/&quot;&gt;Geometrize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ondras.github.io/primitive.js/&quot;&gt;primitive.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://primitive.lol/&quot;&gt;Primitive&lt;/a&gt; for macOs&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&#39;m a Linux person.  Fedora being my daily driver, I went for using &lt;a href=&quot;https://www.geometrize.co.uk/&quot;&gt;Geometrize&lt;/a&gt;
to convert my images into geometric gold.  If you are feeling swirly, you can also us it&#39;s scripting
interface which leverages the C++ based scripting language, &lt;a href=&quot;https://chaiscript.com/&quot;&gt;chaiscript&lt;/a&gt;.  I&#39;ll
start off by geometrizing this post&#39;s thumbnail:&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;video class=&quot;console_gif img_shadow&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;
    &lt;source src=&quot;/static/img/posts/Geometrize_Your_Images/geo_face_generation.webm&quot; type=&quot;video/webm&quot; /&gt;
  &lt;/video&gt;
&lt;/div&gt;
&lt;p&gt;Here are the results for other runs with different geometric shape counts:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Original 300px webP&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;SVG (250 shapes)&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;SVG (85 shapes)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Original Geometric Face&quot; alt=&quot;Original Geometric Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/geo_face_300x300.webp&quot; /&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Large Geometric Face&quot; alt=&quot;Large Geometric Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/geo_face_large.svg&quot; /&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Small Geometric Face&quot; alt=&quot;Small Geometric Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/geo_face_small.svg&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;30kB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;25kB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8.5kB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Here are the results for a different image:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Original 300px webP&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;SVG (250 shapes)&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;SVG (85 shapes)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Original Origami Face&quot; alt=&quot;Original Origami Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/origami_face_300x300.webp&quot; /&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Large Origami Face&quot; alt=&quot;Large Origami Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/origami_face_large.svg&quot; /&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;300&quot; title=&quot;Small Origami Face&quot; alt=&quot;Small Origami Face&quot; src=&quot;/static/img/posts/Geometrize_Your_Images/origami_face_small.svg&quot; /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;17kB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;26kB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8.9kB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, there are some interesting results.  How well the new vector image comes out is a bit
subjective, but we can discuss a couple of factors.  We can say that not all images work for this kind
of transformation.  Nothing is a silver bullet, but the options can be powerful and this offers a lot of
those.  Usually images with naturally geometric features and natural lines do better.  Also Images with a
good amount of contrast fair better too.  All of these features (natural lines, geometric features,
contrast) allow the algorithm to make better decisions about how to generate shapes more efficiently
leading to a powerful geometric based image at a low storage cost.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It is easy to enjoy these tools for their artistic potential and smaller file size.  It is able to
reproduce popular &lt;a href=&quot;https://drawpaintacademy.com/art-styles/&quot;&gt;art styles&lt;/a&gt; for your custom images while
also giving you a lot of file size options by controlling how many shapes a generated image uses, and
by using SVG compression tools such as &lt;a href=&quot;https://github.com/svg/svgo&quot;&gt;svgo&lt;/a&gt;.  These vector approximate
images can then be used for a variety of use cases, such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Placeholders for large images while they are dynamically loading.&lt;/li&gt;
&lt;li&gt;Artful images for your main stage Hero section.&lt;/li&gt;
&lt;li&gt;Thumbnails for larger images.&lt;/li&gt;
&lt;li&gt;Infinitely re-sizable background images.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As with any tool, it won&#39;t be the best option for all images, or all situations.  It is an interesting
option though that leads to even more interesting options as pointed out on
&lt;a href=&quot;https://primitive.lol/&quot;&gt;Primitive&#39;s website&lt;/a&gt;...&lt;/p&gt;
&lt;span class=&quot;quote&quot;&gt;
  &quot;The results are somewhat random, so you won&#39;t get the same output twice,  even with the same inputs. 
One interesting use of this is to generate multiple images with the same input and then make an animated 
GIF of them to bring a static image to life.&quot;
&lt;/span&gt; 
&lt;p&gt;So there is a lot of room for creativity.  For a more in depth reading on how SVG images can be used
in support of high fidelity images, consider the following link:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jmperezperez.com/blog/svg-placeholders/&quot;&gt;How to use SVG as a Placeholder, and Other Image Loading Techniques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Software developing and engineering can sometimes be somewhat of an art form.  This is easy to see
when dealing with images in web development as engineering decisions must come in balance with the
software story you are trying to communicate.  Have fun digitally drawing! üòã&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Malicious SSH Login Attempts</title>
		<link href="/posts/Malicious_Login_Attempts/"/>
		<updated>2022-08-25T00:00:00Z</updated>
		<id>/posts/Malicious_Login_Attempts/</id>
		<content type="html">&lt;h3 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;Introduction &lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you&#39;re brave enough to host your own server on the wide open internet, you should be aware that hacking bots run rampant, constantly trying to crack your server. Most hackers are pretty lazy. Like any real programmer, a hacker does not like to waste their time. However, their bots have plenty of time to waste and are probably trying to crack your SSH server regularly. Let&#39;s take a look at my recent experience with hacker bots and what I have done about it.&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;img loading=&quot;lazy&quot; width=&quot;750&quot; height=&quot;500&quot; class=&quot;meme img_shadow&quot; title=&quot;My Bots are Hacking Your SSH Server&quot; src=&quot;/static/img/posts/Malicious_Login_Attempts/malicious_SSH_login_attempts.webp&quot; alt=&quot;My Bots are Hacking Your SSH Server&quot; data-align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;h3 id=&quot;login-attempts&quot; tabindex=&quot;-1&quot;&gt;Login Attempts &lt;a class=&quot;header-anchor&quot; href=&quot;#login-attempts&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First things first:  We must find these bot login attempts in our logs.  If you&#39;re not coming from an enterprise environment, you probably don&#39;t have some fancy security framework alerting you about every login attempt on your server.  No need to fret though, basic Linux system logs have you covered.  I hopped üêá onto one of my Fedora servers and fired up &lt;code&gt;journalctl&lt;/code&gt; to quickly look for SSHD&#39;s invalid login attempts with the following command:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;‚ûú  ~ journalctl --since &lt;span class=&quot;token string&quot;&gt;&quot;2022-08-08 23:50:00&quot;&lt;/span&gt; --until &lt;span class=&quot;token string&quot;&gt;&quot;2022-08-09 23:50:00&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Invalid user&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; -l&lt;br /&gt;&lt;span class=&quot;token number&quot;&gt;109&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&#39;s no joke.  That&#39;s 109 invalid login attempts on that particular day.  Actually looking at a couple of days, it was &lt;strong&gt;179 invalid login attempts on average per day&lt;/strong&gt;.  What does the actual log look like?  Well, kinda like this:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;‚ûú  ~ journalctl --since &lt;span class=&quot;token string&quot;&gt;&quot;2022-08-08 23:50:00&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Invalid user&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;23&lt;/span&gt;:53:35 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;49601&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user admin from &lt;span class=&quot;token number&quot;&gt;92.255&lt;/span&gt;.85.135 port &lt;span class=&quot;token number&quot;&gt;33200&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 00:43:12 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;49914&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user jojo from &lt;span class=&quot;token number&quot;&gt;92.255&lt;/span&gt;.85.135 port &lt;span class=&quot;token number&quot;&gt;53540&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 00:43:48 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;49917&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user pi from &lt;span class=&quot;token number&quot;&gt;121.205&lt;/span&gt;.57.223 port &lt;span class=&quot;token number&quot;&gt;38926&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 00:43:48 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;49918&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user pi from &lt;span class=&quot;token number&quot;&gt;121.205&lt;/span&gt;.57.223 port &lt;span class=&quot;token number&quot;&gt;38932&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 01:10:19 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50102&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user lab from &lt;span class=&quot;token number&quot;&gt;92.255&lt;/span&gt;.85.135 port &lt;span class=&quot;token number&quot;&gt;42366&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 01:13:59 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50147&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user phpmyadmin from &lt;span class=&quot;token number&quot;&gt;43.132&lt;/span&gt;.157.133 port &lt;span class=&quot;token number&quot;&gt;48266&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 01:15:21 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50165&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user laozhao from &lt;span class=&quot;token number&quot;&gt;43.154&lt;/span&gt;.80.34 port &lt;span class=&quot;token number&quot;&gt;56600&lt;/span&gt;&lt;br /&gt;May &lt;span class=&quot;token number&quot;&gt;17&lt;/span&gt; 01:40:31 fedora sshd&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;50288&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;: Invalid user berrey from &lt;span class=&quot;token number&quot;&gt;222.71&lt;/span&gt;.13.226 port &lt;span class=&quot;token number&quot;&gt;32816&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;analyzing-the-data&quot; tabindex=&quot;-1&quot;&gt;Analyzing the Data &lt;a class=&quot;header-anchor&quot; href=&quot;#analyzing-the-data&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We can look at this data from 4 different dimensions: time, IP addresses, usernames, and passwords.  In the interest of brevity, I will only be looking at this data from the IP addresses and usernames perspective.  I can tell you right now that the IP addresses are quite randomized.  Hackers have a large pool of IP addresses from which to launch attacks, whether due to VPNs, botnets, etc.  So blocking all these requests at the DMZ/firewall before it reaches our servers by using IP block blacklists isn&#39;t going to work.&lt;/p&gt;
&lt;p&gt;What about the usernames?  Well, that is a bit more interesting.  The top 10 usernames and the number of attempted logins were:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;admin 3758&lt;br /&gt;user 2370&lt;br /&gt;user2 1128&lt;br /&gt;ubuntu 877&lt;br /&gt;debian 689&lt;br /&gt;test 597&lt;br /&gt;pi 511&lt;br /&gt;oracle 429&lt;br /&gt;ftpuser 289&lt;br /&gt;test1 210&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some other honorable mentions are:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;guest 180&lt;br /&gt;postgres 156&lt;br /&gt;user1 151&lt;br /&gt;support 144&lt;br /&gt;git 101&lt;br /&gt;mysql 95&lt;br /&gt;vagrant 63&lt;br /&gt;administrator 60&lt;br /&gt;hadoop 56&lt;br /&gt;steam 48&lt;br /&gt;miner 48&lt;br /&gt;minecraft 48&lt;br /&gt;xbmc 41&lt;br /&gt;www 41&lt;br /&gt;tomcat 41&lt;br /&gt;jenkins 40&lt;br /&gt;Administrator 35&lt;br /&gt;dev 34&lt;br /&gt;demo 34&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at the usernames, it is obvious that bots are looking for popular services that may setup an SSH server with a weak default password.&lt;/p&gt;
&lt;h3 id=&quot;mitigation-strategies&quot; tabindex=&quot;-1&quot;&gt;Mitigation Strategies &lt;a class=&quot;header-anchor&quot; href=&quot;#mitigation-strategies&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;So what can we do about it?  That depends on how many resources you have to invest.  Enterprise companies have a wide variety of strategies. The most common is to block any connections to their SSH servers from external networks.  They make heavy use of bastion jump servers which are accessible only via corporate VPNs to a select number of &amp;quot;need to know&amp;quot; privileged users.&lt;/p&gt;
&lt;p&gt;What about the little guy?  Well, there are still a lot of good options that will keep us safe too.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Do not allow the &lt;code&gt;root&lt;/code&gt; account to connect via SSH.&lt;/li&gt;
&lt;li&gt;Do not allow user accounts to connect to SSH via passwords.  Use unique SSH keys instead.&lt;/li&gt;
&lt;li&gt;If you have a static IP address you can leverage, consider whitelisting only that IP to access the SSH server.&lt;/li&gt;
&lt;li&gt;Configure the SSH server to use a port other than port 22 (the default SSH port).  This will definitely reduce the invalid login noise as bots usually don&#39;t even bother trying other ports as that would waste too much time for them.&lt;/li&gt;
&lt;li&gt;Configure Fail2ban, or your firewall flavor (e.g. UFW, IP tables) to lock out specific IP Addresses for a period of time (e.g. 30 min) if they fail to login with a valid SSH session after several attempts (e.g. 3).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With all that, which isn&#39;t too difficult to set up, it will be nearly impossible to get your SSH server PWNed.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We started off exploring our logs for unauthorized SSH login attempts.  We had some fun looking at the data and what that tells us about our attackers. Finally, we discussed some considerations to stay protected and not waste our server resources answering hackers&#39; SSH attempts.&lt;/p&gt;
&lt;p&gt;Stay vigilant... üòè and make those hackers work hard for their bots.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Configure SSH Server Banner</title>
		<link href="/posts/Configure_SSH_Server_Banner/"/>
		<updated>2022-07-17T00:00:00Z</updated>
		<id>/posts/Configure_SSH_Server_Banner/</id>
		<content type="html">&lt;h3 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;Introduction &lt;a class=&quot;header-anchor&quot; href=&quot;#introduction&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let&#39;s talk about your SSH server banner, and the fact that you don&#39;t have one... just yet.&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;video class=&quot;console_gif img_shadow&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot; playsinline=&quot;&quot;&gt;
    &lt;source src=&quot;/static/img/posts/Configure_SSH_Server_Banner/ssh_banner.webm&quot; type=&quot;video/webm&quot; /&gt;
    &lt;source src=&quot;/static/img/posts/Configure_SSH_Server_Banner/ssh_banner.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;/video&gt;
&lt;/div&gt;
&lt;p&gt;No worries, that was me not too long ago.  It is easy to configure, but the first question to ask before you do anything is an existential consideration of the matter...&lt;/p&gt;
&lt;div class=&quot;image_container&quot;&gt;
  &lt;img loading=&quot;lazy&quot; class=&quot;meme img_shadow&quot; width=&quot;652&quot; height=&quot;434&quot; title=&quot;You were so preoccupied with whether or not you could... you never stopped to think if you should&quot; src=&quot;/static/img/posts/Configure_SSH_Server_Banner/configure_SSH_server_banner_meme.webp&quot; alt=&quot;You never stopped to think if you should Jurassic Park Meme&quot; data-align=&quot;center&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Well, there are a few reasons to have one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As a security warning to anyone attempting to log into a server you administer.&lt;/li&gt;
&lt;li&gt;To establish the terms and conditions upon which the server can be used.&lt;/li&gt;
&lt;li&gt;To present the user with any information that doesn&#39;t require a password and should be public knowledge (i.e. branding).&lt;/li&gt;
&lt;li&gt;Dare I say, server ricing üòè (Don&#39;t know what ricing is? Check out the term here: &lt;a href=&quot;https://jie-fang.github.io/blog/basics-of-ricing&quot;&gt;The Basics of Ricing Linux&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you have concluded to proceed, then let us begin.&lt;/p&gt;
&lt;h3 id=&quot;procedure&quot; tabindex=&quot;-1&quot;&gt;Procedure &lt;a class=&quot;header-anchor&quot; href=&quot;#procedure&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;1.-edit-sshd_config&quot; tabindex=&quot;-1&quot;&gt;1. Edit sshd_config &lt;a class=&quot;header-anchor&quot; href=&quot;#1.-edit-sshd_config&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Open the server&#39;s SSH configuration file&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; /etc/ssh/sshd_config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Change the following line&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#Banner none&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;Banner /etc/issue&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and save the file.&lt;/p&gt;
&lt;p&gt;This will activate a banner on an SSH login attempt.  The path of the file given can be any of your choosing. (In this example, the standard path of &lt;code&gt;/etc/issue&lt;/code&gt; is used.)&lt;/p&gt;
&lt;h4 id=&quot;2.-edit-banner-file&quot; tabindex=&quot;-1&quot;&gt;2. Edit Banner File &lt;a class=&quot;header-anchor&quot; href=&quot;#2.-edit-banner-file&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Open the banner file&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; /etc/issue&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and inject the banner that you&#39;d like to be presented on a login attempt.&lt;/p&gt;
&lt;p&gt;The banner file &lt;strong&gt;could&lt;/strong&gt; be a great place to use some ASCII art. I have the following example banner on one of my staging servers:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;----------------------------------------------------&lt;br /&gt;  ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ïó&lt;br /&gt;  ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë&lt;br /&gt;  ‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ñà‚ïó ‚ñà‚ñà‚ïë&lt;br /&gt;  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë&lt;br /&gt;  ‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ïî‚ïù&lt;br /&gt;   ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ïê‚ïù&lt;br /&gt;----------------------------------------------------&lt;br /&gt; Staging Server &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; Welcome, be mindful and have fun&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;br /&gt;----------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For some ASCII text art, check out &lt;a href=&quot;https://textkool.com/en/ascii-art-generator?hl=default&amp;amp;vl=default&amp;amp;font=ANSI%20Shadow&amp;amp;text=Your%20text%20here%20&quot;&gt;ASCII art generator | TextKool&lt;/a&gt;. (I&#39;m a sucker for the ANSI Shadow look üòã)&lt;/p&gt;
&lt;h4 id=&quot;3.-restart-sshd&quot; tabindex=&quot;-1&quot;&gt;3. Restart SSHD &lt;a class=&quot;header-anchor&quot; href=&quot;#3.-restart-sshd&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;‚ö†Ô∏è WARNING&lt;/strong&gt;: In order for the changes to take effect, the SSH service will need to be restarted. In modern systems this will not disconnect your connection, but on older systems it might. Assure you did not make any mistakes on your SSH config file or the SSH service may &lt;strong&gt;fail&lt;/strong&gt; to restart, and you may struggle to get back into your server.&lt;/p&gt;
&lt;p&gt;Validate your &lt;code&gt;sshd_config&lt;/code&gt; file&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; sshd -t&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no errors appear, you &lt;strong&gt;should&lt;/strong&gt; be good to go.  Check this link out for more information on checking your SSH configuration file: &lt;a href=&quot;https://www.simplified.guide/ssh/test-config&quot;&gt;How to check SSH server&#39;s configuration validity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Restart the SSH service&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; sshd restart&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check that the SSH service was restarted, loaded, and active&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; sshd status&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, everything should be good to go. Logout and attempt a login to see your new banner.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; tabindex=&quot;-1&quot;&gt;Conclusion &lt;a class=&quot;header-anchor&quot; href=&quot;#conclusion&quot;&gt;&lt;span aria-label=&quot;header anchor&quot; class=&quot;header-anchor__symbol&quot;&gt;#&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With this procedure we have discussed the considerations for a SSH server banner, how to activate it and implement it. Here are some other useful links on the matter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.tecmint.com/ssh-warning-banner-linux/&quot;&gt;How to Set a Custom SSH Warning Banner and MOTD in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.shellhacks.com/setup-warning-message-banner-ssh/&quot;&gt;HowTo: Set a Warning Message (Banner) in SSH - ShellHacks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy your cool new banner... üòè if it is subjectively cool.&lt;/p&gt;
</content>
	</entry>
</feed>